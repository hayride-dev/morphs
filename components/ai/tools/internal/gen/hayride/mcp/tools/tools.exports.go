// Code generated by wit-bindgen-go. DO NOT EDIT.

package tools

import (
	"go.bytecodealliance.org/cm"
)

// Exports represents the caller-defined exports from "hayride:mcp/tools@0.0.61".
var Exports struct {
	// Error represents the caller-defined exports for resource "hayride:mcp/tools@0.0.61#error".
	Error struct {
		// Destructor represents the caller-defined, exported destructor for resource "error".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// Code represents the caller-defined, exported method "code".
		//
		// return the error code.
		//
		//	code: func() -> error-code
		Code func(self cm.Rep) (result ErrorCode)

		// Data represents the caller-defined, exported method "data".
		//
		// errors can propagated with backend specific status through a string value.
		//
		//	data: func() -> string
		Data func(self cm.Rep) (result string)
	}

	// Tools represents the caller-defined exports for resource "hayride:mcp/tools@0.0.61#tools".
	Tools struct {
		// Destructor represents the caller-defined, exported destructor for resource "tools".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// Constructor represents the caller-defined, exported constructor for resource "tools".
		//
		//	constructor()
		Constructor func() (result Tools)

		// CallTool represents the caller-defined, exported method "call-tool".
		//
		//	call-tool: func(params: call-tool-params) -> result<call-tool-result, error>
		CallTool func(self cm.Rep, params CallToolParams) (result cm.Result[CallToolResultShape, CallToolResult, Error])

		// ListTools represents the caller-defined, exported method "list-tools".
		//
		//	list-tools: func(cursor: string) -> result<list-tools-result, error>
		ListTools func(self cm.Rep, cursor string) (result cm.Result[ListToolsResultShape, ListToolsResult, Error])
	}
}
