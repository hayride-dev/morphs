// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package model represents the imported interface "hayride:ai/model@0.0.57".
package model

import (
	"github.com/hayride-dev/morphs/components/ai/agents/internal/gen/hayride/ai/types"
	"go.bytecodealliance.org/cm"
)

// Message represents the type alias "hayride:ai/model@0.0.57#message".
//
// See [types.Message] for more information.
type Message = types.Message

// ErrorCode represents the enum "hayride:ai/model@0.0.57#error-code".
//
//	enum error-code {
//		context-error,
//		context-encode,
//		context-decode,
//		compute-error,
//		unknown
//	}
type ErrorCode uint8

const (
	ErrorCodeContextError ErrorCode = iota
	ErrorCodeContextEncode
	ErrorCodeContextDecode
	ErrorCodeComputeError
	ErrorCodeUnknown
)

var _ErrorCodeStrings = [5]string{
	"context-error",
	"context-encode",
	"context-decode",
	"compute-error",
	"unknown",
}

// String implements [fmt.Stringer], returning the enum case name of e.
func (e ErrorCode) String() string {
	return _ErrorCodeStrings[e]
}

// MarshalText implements [encoding.TextMarshaler].
func (e ErrorCode) MarshalText() ([]byte, error) {
	return []byte(e.String()), nil
}

// UnmarshalText implements [encoding.TextUnmarshaler], unmarshaling into an enum
// case. Returns an error if the supplied text is not one of the enum cases.
func (e *ErrorCode) UnmarshalText(text []byte) error {
	return _ErrorCodeUnmarshalCase(e, text)
}

var _ErrorCodeUnmarshalCase = cm.CaseUnmarshaler[ErrorCode](_ErrorCodeStrings[:])

// Error represents the imported resource "hayride:ai/model@0.0.57#error".
//
//	resource error
type Error cm.Resource

// ResourceDrop represents the imported resource-drop for resource "error".
//
// Drops a resource handle.
//
//go:nosplit
func (self Error) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorResourceDrop((uint32)(self0))
	return
}

// Code represents the imported method "code".
//
// return the error code.
//
//	code: func() -> error-code
//
//go:nosplit
func (self Error) Code() (result ErrorCode) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_ErrorCode((uint32)(self0))
	result = (ErrorCode)((uint32)(result0))
	return
}

// Data represents the imported method "data".
//
// errors can propagated with backend specific status through a string value.
//
//	data: func() -> string
//
//go:nosplit
func (self Error) Data() (result string) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_ErrorData((uint32)(self0), &result)
	return
}

// Format represents the imported resource "hayride:ai/model@0.0.57#format".
//
//	resource format
type Format cm.Resource

// ResourceDrop represents the imported resource-drop for resource "format".
//
// Drops a resource handle.
//
//go:nosplit
func (self Format) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_FormatResourceDrop((uint32)(self0))
	return
}

// NewFormat represents the imported constructor for resource "format".
//
//	constructor()
//
//go:nosplit
func NewFormat() (result Format) {
	result0 := wasmimport_NewFormat()
	result = cm.Reinterpret[Format]((uint32)(result0))
	return
}

// Decode represents the imported method "decode".
//
//	decode: func(raw: list<u8>) -> result<message, error>
//
//go:nosplit
func (self Format) Decode(raw cm.List[uint8]) (result cm.Result[MessageShape, Message, Error]) {
	self0 := cm.Reinterpret[uint32](self)
	raw0, raw1 := cm.LowerList(raw)
	wasmimport_FormatDecode((uint32)(self0), (*uint8)(raw0), (uint32)(raw1), &result)
	return
}

// Encode represents the imported method "encode".
//
//	encode: func(messages: list<message>) -> result<list<u8>, error>
//
//go:nosplit
func (self Format) Encode(messages cm.List[Message]) (result cm.Result[cm.List[uint8], cm.List[uint8], Error]) {
	self0 := cm.Reinterpret[uint32](self)
	messages0, messages1 := cm.LowerList(messages)
	wasmimport_FormatEncode((uint32)(self0), (*Message)(messages0), (uint32)(messages1), &result)
	return
}
