// Code generated by wit-bindgen-go. DO NOT EDIT.

package context

import (
	"go.bytecodealliance.org/cm"
)

// Exports represents the caller-defined exports from "hayride:ai/context@0.0.53".
var Exports struct {
	// Error represents the caller-defined exports for resource "hayride:ai/context@0.0.53#error".
	Error struct {
		// Destructor represents the caller-defined, exported destructor for resource "error".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// Code represents the caller-defined, exported method "code".
		//
		// return the error code.
		//
		//	code: func() -> error-code
		Code func(self cm.Rep) (result ErrorCode)

		// Data represents the caller-defined, exported method "data".
		//
		// errors can propagated with backend specific status through a string value.
		//
		//	data: func() -> string
		Data func(self cm.Rep) (result string)
	}

	// Context represents the caller-defined exports for resource "hayride:ai/context@0.0.53#context".
	Context struct {
		// Destructor represents the caller-defined, exported destructor for resource "context".
		//
		// Resource destructor.
		Destructor func(self cm.Rep)

		// Constructor represents the caller-defined, exported constructor for resource "context".
		//
		//	constructor()
		Constructor func() (result Context)

		// Messages represents the caller-defined, exported method "messages".
		//
		//	messages: func() -> result<list<message>, error>
		Messages func(self cm.Rep) (result cm.Result[cm.List[Message], cm.List[Message], Error])

		// Push represents the caller-defined, exported method "push".
		//
		//	push: func(msg: message) -> result<_, error>
		Push func(self cm.Rep, msg Message) (result cm.Result[Error, struct{}, Error])
	}
}
