// Code generated by wit-bindgen-go. DO NOT EDIT.

// Package tensorstream represents the imported interface "hayride:ai/tensor-stream@0.0.57".
//
// This interface defines a stream of tensors. The stream is a sequence of tensors.
package tensorstream

import (
	"github.com/hayride-dev/morphs/components/ai/models/internal/gen/wasi/io/poll"
	"github.com/hayride-dev/morphs/components/ai/models/internal/gen/wasi/io/streams"
	"github.com/hayride-dev/morphs/components/ai/models/internal/gen/wasi/nn/tensor"
	"go.bytecodealliance.org/cm"
)

// TensorData represents the type alias "hayride:ai/tensor-stream@0.0.57#tensor-data".
//
// See [tensor.TensorData] for more information.
type TensorData = tensor.TensorData

// TensorDimensions represents the type alias "hayride:ai/tensor-stream@0.0.57#tensor-dimensions".
//
// See [tensor.TensorDimensions] for more information.
type TensorDimensions = tensor.TensorDimensions

// TensorType represents the type alias "hayride:ai/tensor-stream@0.0.57#tensor-type".
//
// See [tensor.TensorType] for more information.
type TensorType = tensor.TensorType

// Pollable represents the imported type alias "hayride:ai/tensor-stream@0.0.57#pollable".
//
// See [poll.Pollable] for more information.
type Pollable = poll.Pollable

// StreamError represents the imported type alias "hayride:ai/tensor-stream@0.0.57#stream-error".
//
// See [streams.StreamError] for more information.
type StreamError = streams.StreamError

// TensorStream represents the imported resource "hayride:ai/tensor-stream@0.0.57#tensor-stream".
//
//	resource tensor-stream
type TensorStream cm.Resource

// ResourceDrop represents the imported resource-drop for resource "tensor-stream".
//
// Drops a resource handle.
//
//go:nosplit
func (self TensorStream) ResourceDrop() {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_TensorStreamResourceDrop((uint32)(self0))
	return
}

// NewTensorStream represents the imported constructor for resource "tensor-stream".
//
//	constructor(dimensions: tensor-dimensions, ty: tensor-type, data: tensor-data)
//
//go:nosplit
func NewTensorStream(dimensions TensorDimensions, ty TensorType, data TensorData) (result TensorStream) {
	dimensions0, dimensions1 := cm.LowerList(dimensions)
	ty0 := (uint32)(ty)
	data0, data1 := cm.LowerList(data)
	result0 := wasmimport_NewTensorStream((*uint32)(dimensions0), (uint32)(dimensions1), (uint32)(ty0), (*uint8)(data0), (uint32)(data1))
	result = cm.Reinterpret[TensorStream]((uint32)(result0))
	return
}

// Dimensions represents the imported method "dimensions".
//
// Describe the size of the tensor (e.g., 2x2x2x2 -> [2, 2, 2, 2]). To represent a
// tensor
// containing a single value, use `[1]` for the tensor dimensions.
//
//	dimensions: func() -> tensor-dimensions
//
//go:nosplit
func (self TensorStream) Dimensions() (result TensorDimensions) {
	self0 := cm.Reinterpret[uint32](self)
	wasmimport_TensorStreamDimensions((uint32)(self0), &result)
	return
}

// Read represents the imported method "read".
//
// Read up to `len` bytes from the stream.
//
//	read: func(len: u64) -> result<tensor-data, stream-error>
//
//go:nosplit
func (self TensorStream) Read(len_ uint64) (result cm.Result[TensorData, TensorData, StreamError]) {
	self0 := cm.Reinterpret[uint32](self)
	len0 := (uint64)(len_)
	wasmimport_TensorStreamRead((uint32)(self0), (uint64)(len0), &result)
	return
}

// Subscribe represents the imported method "subscribe".
//
//	subscribe: func() -> pollable
//
//go:nosplit
func (self TensorStream) Subscribe() (result Pollable) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_TensorStreamSubscribe((uint32)(self0))
	result = cm.Reinterpret[Pollable]((uint32)(result0))
	return
}

// Ty represents the imported method "ty".
//
// Describe the type of element in the tensor (e.g., `f32`).
//
//	ty: func() -> tensor-type
//
//go:nosplit
func (self TensorStream) Ty() (result TensorType) {
	self0 := cm.Reinterpret[uint32](self)
	result0 := wasmimport_TensorStreamTy((uint32)(self0))
	result = (tensor.TensorType)((uint32)(result0))
	return
}
